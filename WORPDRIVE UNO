// CODIGO FUENTE DE LA PRMER SECCION DEL PROYECTO (UNO QUE RECOPILA DATOS DE TEMPERATURA Y HUMEDAD )
#include <DHT.h>
#include <SD.h> // Añade la librería para trabajar con tarjetas SD.

#define DHTPIN 2
#define DHTTYPE DHT11

DHT dht(DHTPIN, DHTTYPE);
const int chipSelect = 10; // Elige el pin CS al que está conectada la tarjeta microSD.

void setup() {
  Serial.begin(9600);
  dht.begin();

  // Inicializar la tarjeta SD.
  if (!SD.begin(chipSelect)) {
    Serial.println("Error al inicializar la tarjeta SD.");
    return;
  }
  Serial.println("Tarjeta SD inicializada correctamente.");
}

void loop() {
  delay(2000);

  float temperature = dht.readTemperature();
  float humidity = dht.readHumidity();

  if (isnan(temperature) || isnan(humidity)) {
    Serial.println("Error al leer el sensor DHT!");
  } else {
    Serial.print("Temperatura: ");
    Serial.print(temperature);
    Serial.print(" °C\t");
    Serial.print("Humedad: ");
    Serial.print(humidity);
    Serial.println(" %");
    
    // Guardar los datos en la tarjeta SD.
    File dataFile = SD.open("datos.txt", FILE_WRITE);
    if (dataFile) {
      dataFile.print("Temperatura: ");
      dataFile.print(temperature);
      dataFile.print(" °C, Humedad: ");
      dataFile.print(humidity);
      dataFile.println(" %");
      dataFile.close();
      Serial.println("Datos guardados correctamente en la tarjeta SD.");
    } else {
      Serial.println("Error al abrir el archivo en la tarjeta SD.");
    }
  }
}



//CODIGO FUENTE PARA LA SEGUNDA SECCION DEL PROYECTO (CARRO DE ARDUINO AUTONO )

/* ALGOBACK YOUTUBE CHANNEL */
/* CODIGO PARA CARRO QUE EVITA OBSTACULOS */

#include <Servo.h> 
#include <NewPing.h>
#include <AFMotor.h>  

NewPing Dist(A0, A1, 200); //(trig,echo,dist max)
Servo myServo; 

// Definición de pines para el motor izquierdo
int motorIzquierdoPin1 = 2; // Conectar al pin IN1 del puente H
int motorIzquierdoPin2 = 3; // Conectar al pin IN2 del puente H

// Definición de pines para el motor derecho
int motorDerechoPin1 = 4; // Conectar al pin IN3 del puente H
int motorDerechoPin2 = 5; // Conectar al pin IN4 del puente H

void setup() {
  // Configura los pines como salidas
  pinMode(motorIzquierdoPin1, OUTPUT);
  pinMode(motorIzquierdoPin2, OUTPUT);
  pinMode(motorDerechoPin1, OUTPUT);
  pinMode(motorDerechoPin2, OUTPUT);
}

void loop() {
  // Mover hacia adelante
  digitalWrite(motorIzquierdoPin1, HIGH);
  digitalWrite(motorIzquierdoPin2, LOW);
  digitalWrite(motorDerechoPin1, HIGH);
  digitalWrite(motorDerechoPin2, LOW);
  delay(2000); // Mover durante 2 segundos

  // Detenerse
  digitalWrite(motorIzquierdoPin1, LOW);
  digitalWrite(motorIzquierdoPin2, LOW);
  digitalWrite(motorDerechoPin1, LOW);
  digitalWrite(motorDerechoPin2, LOW);
  delay(1000); // Esperar durante 1 segundo

  // Girar a la izquierda
  digitalWrite(motorIzquierdoPin1, LOW);
  digitalWrite(motorIzquierdoPin2, LOW);
  digitalWrite(motorDerechoPin1, HIGH);
  digitalWrite(motorDerechoPin2, LOW);
  delay(1000); // Girar durante 1 segundo

  // Detenerse
  digitalWrite(motorIzquierdoPin1, LOW);
  digitalWrite(motorIzquierdoPin2, LOW);
  digitalWrite(motorDerechoPin1, LOW);
  digitalWrite(motorDerechoPin2, LOW);
  delay(1000); // Esperar durante 1 segundo
}
